continue
result.string_character
strength_rating
continue
ORIGINAL_WORD
exit
index
twitter_word
twitter_Word
index
continue
exit
strong_word.sub(reemplace_word, '')
strong_word
reemplace_word
mid_word
word
strong_word
word.to_i.zero?
word.to_i
word.to_1
word
mid_word
exit
casa
casa.gsub!("ho", "t")
casa.gsub("ho", "t")!
casa
casa.gsub("ho", "t")
casa = "hola"
dictionary_wordnet[strong_word].nil?
dictionary_wordnet[strong_word]
continue
dictionary_wordnet["hello"]
dictionary_wordnet["if"]
dictionary_wordnet
dictionary_wordnet[strong_word]
strong_word
continue
dictionary_wordnet[strong_word]
dictionary_wordnet
strong_word
continue
dictionary_wordnet[strong_word]
dictionary_wordnet[:strong_word]
strong_word
dictionary_wordnet
strong_word
continue
strong_word
exit
word.to_i != 0
word
word != '0'
gets.chomp.to_i
gets.chomp
a.empty?
a = ""
strong_word
strong_word.empty?
"c".to_i
"c".to_i?
strong_word.to_i
strong_word
strong_word.between?(1, 2)
strong_word.between?(-1, 2)
strong_word.range?(-1, 2)
strong_word.range?(1..2)
strong_word.between?(1..2)
strong_word.between(1..2)
strong_word
exit
strong_word
continue
twitter_word
strong_word
continue
strong_word
continue
strong_word
exit
twitter_word.chars
twitter_word.char
twitter_word
twitter_word.chars.each do |word|
length_word > 1
dictionary_wordnet
length_word
twitter_word
continue
user_martial_status
exit
user_martial_status
c
letter
user_martial_status
current_user
unemployed_probability
continue
unemployed_message
continue
unemployed_message
continue
unemployed_probability
continue
current_user.user_martial_status
current_user
continue
birthdate.mon
birthdate.mom
age_in_years - 1
age_in_years
continue
(difference_years - 1)
difference_years - 1
difference_years
(difference_years - 1) * 12
continue
probability
continue
probability
continue
case probability when probability > 40  "alo" end
case probability when probability > 40 return "alo" end
case probability
current_user.new_customer(total_unemployed_probability)
total_unemployed_probability
current_user.new_customer
current_user
continue
unemployed_probability.first.sum
unemployed_probability.first
unemployed_probability.sum
unemployed_probability
continue
unemployed_probability += current_user_methods.map do |method| current_user.send(method) end
unemployed_probability += current_user_methods.map do |method|
unemployed_probability
5
current_user.send(method)
unemployed_probability
current_user.send(method)
continue
current_user.send(method)
unemployed_probability
unemployed_probabilty
whereami
current_user.send(method)
continue
current_user.send(method)
continue
current_user.send(method)
continue
current_user.send(method)
continue
current_user.send(method)
current_user
unemployed_probability
continue
unemployed_probability 
continue
unemployed_probability << current_user.send(method)
current_user.send(method)
unemployed_probability
continue
user_hiring_time
user_age
current_user.send(method)
current_user
unemployed_probability
continue
current_user.user_married
current_user.married
current_user
exit
user_martial_status
current_user.user_married
current_user
continue
current_user.send(aa)
current_user
aa = current_user_methods.dig(1)
current_user_methods.dig(1)
current_user_methods
s
current_user.send(s)
current_user
s = current_user_methods.dig(1)
current_user_methods.dig(1)
current_user_methods.first
current_user_methods
current_user_methods.second
current_user_methods
current_user
continue
current_user.send(method)
a
current_user.user_martial_status
current_user.user_age
current_user
current_user.send(a)
current_user.send()
current_user
current_user.method
current_user.a
current_user
a = method.to_sym
method.to_sym
current_user.method.to_sym
method.to_sym
method
current_user.method
current_user
method
current_user_methods
continue
current_user_lucky_number
continue
current_user_lucky_number
continue
current_user_lucky_number
continue
current_user_lucky_number
continue
current_user_lucky_number
exit
continue
current_user_lucky_number.to_i > 9 ?
current_user_lucky_number.to_i > 9
current_user_lucky_number.to_i
current_user_lucky_number
    current_user_lucky_number.to_i > 9 ? lucky_number(current_user_lucky_number) : current_user_lucky_number
next
    current_user_lucky_number > 9 ? lucky_number(current_user_lucky_number) : current_user_lucky_number
current_user_lucky_number
continue
@birthdate = Date.new((current_user_year, current_user_month, current_user_day).to_i)
@birthdate = Date.new(current_user_year, current_user_month, current_user_day).to_i
@birthdate = Date.new(current_user_year.to_i, current_user_month.to_i, current_user_day.to_i)
@birthdate = Date.new(current_user_year, current_user_month.to_i, current_user_day.to_i)
@birthdate = Date.new(current_user_year, current_user_month, current_user_day.to_i)
@birthdate = Date.new(current_user_year, current_user_month, current_user_day)
!17
!19
@current_user_year
@total_name
exit
total_students
s
f
whereami
continue
note_student.is_a?(Integer)
(0..20) === note_student
note_student
continue
